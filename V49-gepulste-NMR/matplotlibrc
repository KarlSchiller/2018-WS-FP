# pgf-Backend benutzen
backend : pgf

# unsere Fonteinstellungen benutzen
pgf.rcfonts : False

# TeX benutzen
pgf.texsystem : lualatex
pgf.preamble : \input{header-matplotlib.tex}


### LINES
# See http://matplotlib.org/api/artist_api.html#module-matplotlib.lines for more
# information on line properties.
#lines.linewidth   : 1.5     # line width in points
lines.linestyle   : -       # solid line
#lines.color       : C0      # has no affect on plot(); see axes.prop_cycle
lines.marker      : None    # the default marker
#lines.markeredgewidth  : 1.0     # the line width around the marker symbol
#lines.markersize  : 6            # markersize, in points
#lines.dash_joinstyle : miter        # miter|round|bevel
#lines.dash_capstyle : butt          # butt|round|projecting
#lines.solid_joinstyle : miter       # miter|round|bevel
#lines.solid_capstyle : projecting   # butt|round|projecting
#lines.antialiased : True         # render lines in antialiased (no jaggies)
# The three standard dash patterns.  These are scaled by the linewidth.
#lines.dashed_pattern : 2.8, 1.2
#lines.dashdot_pattern : 4.8, 1.2, 0.8, 1.2
#lines.dotted_pattern : 1.1, 1.1
#lines.scale_dashes : True

#markers.fillstyle: full # full|left|right|bottom|top|none


### FONT
# font properties used by text.Text.  See
# http://matplotlib.org/api/font_manager_api.html for more
# information on font properties.  The 6 font properties used for font
# matching are given below with their default values.
#
# The font.family property has five values: 'serif' (e.g., Times),
# 'sans-serif' (e.g., Helvetica), 'cursive' (e.g., Zapf-Chancery),
# 'fantasy' (e.g., Western), and 'monospace' (e.g., Courier).  Each of
# these font families has a default list of font names in decreasing
# order of priority associated with them.  When text.usetex is False,
# font.family may also be one or more concrete font names.
#
# The font.style property has three values: normal (or roman), italic
# or oblique.  The oblique style will be used for italic, if it is not
# present.
#
# The font.variant property has two values: normal or small-caps.  For
# TrueType fonts, which are scalable fonts, small-caps is equivalent
# to using a font size of 'smaller', or about 83%% of the current font
# size.
#
# The font.weight property has effectively 13 values: normal, bold,
# bolder, lighter, 100, 200, 300, ..., 900.  Normal is the same as
# 400, and bold is 700.  bolder and lighter are relative values with
# respect to the current weight.
#
# The font.stretch property has 11 values: ultra-condensed,
# extra-condensed, condensed, semi-condensed, normal, semi-expanded,
# expanded, extra-expanded, ultra-expanded, wider, and narrower.  This
# property is not currently implemented.
#
# The font.size property is the default font size for text, given in pts.
# 10 pt is the standard value.
#
font.family         : serif
font.style          : normal
#font.variant        : normal
#font.weight         : medium
#font.stretch        : normal
# note that font.size controls default text sizes.  To configure
# special text sizes tick labels, axes, labels, title, etc, see the rc
# settings for axes and ticks. Special text sizes can be defined
# relative to font.size, using the following values: xx-small, x-small,
# small, medium, large, x-large, xx-large, larger, or smaller
font.size           : 11.0
# font.serif          : DejaVu Serif, Bitstream Vera Serif, New Century Schoolbook, Century Schoolbook L, Utopia, ITC Bookman, Bookman, Nimbus Roman No9 L, Times New Roman, Times, Palatino, Charter, serif
#font.sans-serif     : DejaVu Sans, Bitstream Vera Sans, Lucida Grande, Verdana, Geneva, Lucid, Arial, Helvetica, Avant Garde, sans-serif
#font.cursive        : Apple Chancery, Textile, Zapf Chancery, Sand, Script MT, Felipa, cursive
#font.fantasy        : Comic Sans MS, Chicago, Charcoal, Impact, Western, Humor Sans, xkcd, fantasy
#font.monospace      : DejaVu Sans Mono, Bitstream Vera Sans Mono, Andale Mono, Nimbus Mono L, Courier New, Courier, Fixed, Terminal, monospace


### TICKS
# see http://matplotlib.org/api/axis_api.html#matplotlib.axis.Tick
xtick.top            : True   # draw ticks on the top side
xtick.bottom         : True   # draw ticks on the bottom side
xtick.major.size     : 3.5      # major tick size in points
xtick.minor.size     : 2      # minor tick size in points
xtick.major.width    : 0.8    # major tick width in points
xtick.minor.width    : 0.6    # minor tick width in points, default 0.6
# xtick.major.pad      : 3.5      # distance to major tick label in points
# xtick.minor.pad      : 3.4      # distance to the minor tick label in points
# xtick.color          : k      # color of the tick labels
xtick.labelsize      : 9 # fontsize of the tick labels, default medium
xtick.direction      : in     # direction: in, out, or inout
# xtick.minor.visible  : True  # visibility of minor ticks on x-axis
xtick.major.top      : True   # draw x axis top major ticks
xtick.major.bottom   : True   # draw x axis bottom major ticks
xtick.minor.top      : True   # draw x axis top minor ticks
xtick.minor.bottom   : True   # draw x axis bottom minor ticks

ytick.left           : True   # draw ticks on the left side
ytick.right          : True   # draw ticks on the right side
ytick.major.size     : 3.5      # major tick size in points
ytick.minor.size     : 2      # minor tick size in points
ytick.major.width    : 0.8    # major tick width in points
ytick.minor.width    : 0.6    # minor tick width in points
# ytick.major.pad      : 3.5      # distance to major tick label in points
# ytick.minor.pad      : 3.4      # distance to the minor tick label in points
# ytick.color          : k      # color of the tick labels
ytick.labelsize      : 9 # fontsize of the tick labels, default medium
ytick.direction      : in    # direction: in, out, or inout
# ytick.minor.visible  : False  # visibility of minor ticks on y-axis
ytick.major.left     : True   # draw y axis left major ticks
ytick.major.right    : True   # draw y axis right major ticks
ytick.minor.left     : True   # draw y axis left minor ticks
ytick.minor.right    : True   # draw y axis right minor ticks


### LaTeX customizations.
#See http://wiki.scipy.org/Cookbook/Matplotlib/UsingTex
text.usetex         : True  # use latex for all text handling. The following fonts
                              # are supported through the usual rc parameter settings:
                              # new century schoolbook, bookman, times, palatino,
                              # zapf chancery, charter, serif, sans-serif, helvetica,
                              # avant garde, courier, monospace, computer modern roman,
                              # computer modern sans serif, computer modern typewriter
                              # If another font is desired which can loaded using the
                              # LaTeX \usepackage command, please inquire at the
                              # matplotlib mailing list
text.latex.unicode : True # use "ucs" and "inputenc" LaTeX packages for handling
                            # unicode strings.


## LEGEND
#legend.loc           : best
#legend.frameon       : True     # if True, draw the legend on a background patch
#legend.framealpha    : 0.8      # legend patch transparency
#legend.facecolor     : inherit  # inherit from axes.facecolor; or color spec
#legend.edgecolor     : 0.8      # background patch boundary color
#legend.fancybox      : True     # if True, use a rounded box for the
                                 # legend background, else a rectangle
#legend.shadow        : False    # if True, give background a shadow effect
#legend.numpoints     : 1        # the number of marker points in the legend line
#legend.scatterpoints : 1        # number of scatter points
#legend.markerscale   : 1.0      # the relative size of legend markers vs. original
legend.fontsize      : medium
# Dimensions as fraction of fontsize:
#legend.borderpad     : 0.4      # border whitespace
#legend.labelspacing  : 0.5      # the vertical space between the legend entries
#legend.handlelength  : 2.0      # the length of the legend lines
#legend.handleheight  : 0.7      # the height of the legend handle
#legend.handletextpad : 0.8      # the space between the legend line and legend text
#legend.borderaxespad : 0.5      # the border between the axes and legend edge
#legend.columnspacing : 2.0      # column separation


## FIGURE
# See http://matplotlib.org/api/figure_api.html#matplotlib.figure.Figure
#figure.titlesize : large      # size of the figure title (Figure.suptitle())
#figure.titleweight : normal   # weight of the figure title
figure.figsize   : 5.78, 3.57   # figure size in inches, default 6.4, 4.8
figure.dpi       : 300      # figure dots per inch
#figure.facecolor : white   # figure facecolor; 0.75 is scalar gray
#figure.edgecolor : white   # figure edgecolor
figure.autolayout : True  # When True, automatically adjust subplot
                            # parameters to make the plot fit the figure
#figure.max_open_warning : 20  # The maximum number of figures to open through
                               # the pyplot interface before emitting a warning.
                               # If less than one this feature is disabled.

# The figure subplot parameters.  All dimensions are a fraction of the
#figure.subplot.left    : 0.125  # the left side of the subplots of the figure
#figure.subplot.right   : 0.9    # the right side of the subplots of the figure
#figure.subplot.bottom  : 0.11    # the bottom of the subplots of the figure
#figure.subplot.top     : 0.88    # the top of the subplots of the figure
#figure.subplot.wspace  : 0.2    # the amount of width reserved for blank space between subplots,
                                 # expressed as a fraction of the average axis width
#figure.subplot.hspace  : 0.2    # the amount of height reserved for white space between subplots,
                                 # expressed as a fraction of the average axis height


### AXES
# default face and edge color, default tick sizes,
# default fontsizes for ticklabels, and so on.  See
# http://matplotlib.org/api/axes_api.html#module-matplotlib.axes
#axes.facecolor      : white   # axes background color
#axes.edgecolor      : black   # axes edge color
axes.linewidth      : 0.8     # edge linewidth, default 0.8
#axes.grid           : False   # display grid or not
#axes.titlesize      : large   # fontsize of the axes title
#axes.titlepad       : 6.0     # pad between axes and title in points
#axes.labelsize      : medium  # fontsize of the x any y labels
#axes.labelpad       : 4.0     # space between label and axis
#axes.labelweight    : normal  # weight of the x and y labels
#axes.labelcolor     : black
#axes.axisbelow      : 'line'  # draw axis gridlines and ticks below
                               # patches (True); above patches but below
                               # lines ('line'); or above all (False)

axes.formatter.limits : -3, 3 # use scientific notation if log10
                               # of the axis range is smaller than the
                               # first or larger than the second, default -7, 7
axes.formatter.use_locale : True # When True, format tick labels
                                   # according to the user's locale.
                                   # For example, use ',' as a decimal
                                   # separator in the fr_FR locale.
#axes.formatter.use_mathtext : False # When True, use mathtext for scientific
                                     # notation.
#axes.formatter.useoffset      : True    # If True, the tick label formatter
                                         # will default to labeling ticks relative
                                         # to an offset when the data range is
                                         # small compared to the minimum absolute
                                         # value of the data.
#axes.formatter.offset_threshold : 4     # When useoffset is True, the offset
                                         # will be used when it can remove
                                         # at least this number of significant
                                         # digits from tick labels.

axes.spines.left   : True   # display axis spines
axes.spines.bottom : True
axes.spines.top    : True
axes.spines.right  : True


#axes.unicode_minus  : True    # use unicode for the minus symbol
                               # rather than hyphen.  See
                               # http://en.wikipedia.org/wiki/Plus_and_minus_signs#Character_codes
#axes.prop_cycle    : cycler('color',
#                            ['1f77b4', 'ff7f0e', '2ca02c', 'd62728',
#                              '9467bd', '8c564b', 'e377c2', '7f7f7f',
#                              'bcbd22', '17becf'])
                                            # color cycle for plot lines
                                            # as list of string colorspecs:
                                            # single letter, long name, or
                                            # web-style hex
#axes.autolimit_mode : data # How to scale axes limits to the data.
                            # Use "data" to use data limits, plus some margin
                            # Use "round_number" move to the nearest "round" number
#axes.xmargin        : .05  # x margin.  See `axes.Axes.margins`
#axes.ymargin        : .05  # y margin See `axes.Axes.margins`

polaraxes.grid      : True    # display grid on polar axes
axes3d.grid         : True    # display grid on 3d axes


### SAVING FIGURES
# path.simplify : True   # When True, simplify paths by removing "invisible"
                       # points to reduce file size and increase rendering
                       # speed
#path.simplify_threshold : 0.1  # The threshold of similarity below which
                                # vertices will be removed in the simplification
                                # process
#path.snap : True # When True, rectilinear axis-aligned paths will be snapped to
                  # the nearest pixel when certain criteria are met.  When False,
                  # paths will never be snapped.
#path.sketch : None # May be none, or a 3-tuple of the form (scale, length,
                    # randomness).
                    # *scale* is the amplitude of the wiggle
                    # perpendicular to the line (in pixels).  *length*
                    # is the length of the wiggle along the line (in
                    # pixels).  *randomness* is the factor by which
                    # the length is randomly scaled.

# the default savefig params can be different from the display params
# e.g., you may want a higher resolution, or to make the figure
# background white
#savefig.dpi         : figure   # figure dots per inch or 'figure'
#savefig.facecolor   : white    # figure facecolor when saving
#savefig.edgecolor   : white    # figure edgecolor when saving
savefig.format      : pdf      # png, ps, pdf, svg
savefig.bbox        : standard     # 'tight' or 'standard'.
                                # 'tight' is incompatible with pipe-based animation
                                # backends but will workd with temporary file based ones:
                                # e.g. setting animation.writer to ffmpeg will not work,
                                # use ffmpeg_file instead
#savefig.pad_inches  : 0.1      # Padding to be used when bbox is set to 'tight'
#savefig.jpeg_quality: 95       # when a jpeg is saved, the default quality parameter.
#savefig.directory   : ~        # default directory in savefig dialog box,
                                # leave empty to always use current working directory
savefig.transparent : False     # setting that controls whether figures are saved with a
                                # transparent background by default

# Set the verbose flags.  This controls how much information
# matplotlib gives you at runtime and where it goes.  The verbosity
# levels are: silent, helpful, debug, debug-annoying.  Any level is
# inclusive of all the levels below it.  If your setting is "debug",
# you'll get all the debug and helpful messages.  When submitting
# problems to the mailing-list, please set verbose to "helpful" or "debug"
# and paste the output into your report.
#
# The "fileo" gives the destination for any calls to verbose.report.
# These objects can a filename, or a filehandle like sys.stdout.
#
# You can override the rc default verbosity from the command line by
# giving the flags --verbose-LEVEL where LEVEL is one of the legal
# levels, e.g., --verbose-helpful.
#
# You can access the verbose instance in your code
#   from matplotlib import verbose.
verbose.level  : helpful      # one of silent, helpful, debug, debug-annoying
verbose.fileo  : sys.stdout  # a log filename, sys.stdout or sys.stderr

# Event keys to interact with figures/plots via keyboard.
# Customize these settings according to your needs.
# Leave the field(s) empty if you don't need a key-map. (i.e., fullscreen : '')

keymap.fullscreen : f, ctrl+f       # toggling
#keymap.home : h, r, home            # home or reset mnemonic
keymap.back : left, c, backspace    # forward / backward keys to enable
keymap.forward : right, v           #   left handed quick navigation
#keymap.pan : p                      # pan mnemonic
#keymap.zoom : o                     # zoom mnemonic
#keymap.save : s                     # saving current figure
keymap.quit : ctrl+w, cmd+w         # close the current figure
# keymap.grid : g                     # switching on/off a grid in current axes
#keymap.yscale : l                   # toggle scaling of y-axes ('log'/'linear')
#keymap.xscale : L, k                # toggle scaling of x-axes ('log'/'linear')
#keymap.all_axes : a                 # enable all axes
